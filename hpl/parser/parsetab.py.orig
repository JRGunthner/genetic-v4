
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'ADIMENSIONAL AND ATTRIBUTION BOOL CHAR CHECKLIST COMMENT DIVIDE DO DOTCOMMA ELSE EQUAL ERROR EXISTS_FUNCTION FLOAT FROM GREAT_EQUAL IDENTIFIER IF INTEGER LBRACKET LESS_EQUAL LOAD LPAREN LSQUARE_BRACKET MEASUREMENT_UNIT MINUS NOT NOT_EQUAL OR PLUS PRINT_SIMULATOR_FUNCTION RBRACKET RPAREN RSQUARE_BRACKET STRING SUBPROPERTY THEN THROW TIMES TP_ARRAY TP_BOOL TP_CHAR TP_FLOAT TP_INTEGER TP_OBJECT TP_STRING TWO_POINTS WHERE WHILEprogram : command_sequenceterm : term measure_unitmeasure_unit : MEASUREMENT_UNIT DIVIDE MEASUREMENT_UNITmeasure_unit : MEASUREMENT_UNITexpression : termcommand_sequence : commandcommand_sequence : command command_sequencecommand : expressioncommand : control_operationscommand : attribution_statementcommand : IDENTIFIERcommand : arrayexpression : THROW ERROR LPAREN STRING RPARENexpression : load_statementexpression : expression TIMES term expression : expression DIVIDE termexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NOT termexpression : expression LESS_EQUAL expressionexpression : expression GREAT_EQUAL expressionexpression : expression NOT_EQUAL expressionexpression : expression EQUAL expressionobject_definition : object_definition DOTCOMMA object_definitionobject_definition : IDENTIFIER TWO_POINTS expression emptyattribution_statement : type IDENTIFIER emptyattribution_statement : type IDENTIFIER ATTRIBUTION expressionattribution_statement : IDENTIFIER ATTRIBUTION expressionattribution_statement : IDENTIFIER LBRACKET expression RBRACKET ATTRIBUTION expressionterm : term SUBPROPERTY LPAREN expression RPARENterm : term SUBPROPERTYterm : CHECKLIST LBRACKET STRING RBRACKETterm : INTEGERterm : MINUS INTEGERterm : FLOATterm : LPAREN expression RPARENterm : BOOLterm : IDENTIFIER LBRACKET expression RBRACKETterm : EXISTS_FUNCTION LPAREN IDENTIFIER RPARENterm : ADIMENSIONAL LPAREN expression RPARENterm : IDENTIFIERterm : STRINGterm : arrayterm : objectload_statement : LOAD STRING FROM STRING WHERE expressionif_statement : IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET else_statementif_statement : IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET emptyelse_statement : ELSE LBRACKET command_sequence RBRACKETelse_statement : ELSE if_statementcontrol_operations : if_statementcontrol_operations : while_statementwhile_statement : WHILE LPAREN expression RPAREN DO LBRACKET command_sequence RBRACKETobject : LBRACKET object_definition RBRACKETobject : PRINT_SIMULATOR_FUNCTION LPAREN term DOTCOMMA term DOTCOMMA term DOTCOMMA term RPARENarray : LSQUARE_BRACKET list_terms RSQUARE_BRACKETlist_terms : list_terms DOTCOMMA term\n                  | list_terms DOTCOMMA expressionlist_terms : term_arrayterm_array : expressiontype : TP_OBJECTtype : TP_INTEGERtype : TP_FLOATtype : TP_BOOLtype : TP_ARRAYtype : TP_STRINGempty :'
=======
_lr_signature = 'MEASUREMENT_UNIT TP_OBJECT TP_INTEGER TP_FLOAT TP_BOOL TP_CHAR TP_STRING ELSE IF THEN WHILE DO EXISTS_FUNCTION LOAD FROM WHERE LESS_EQUAL GREAT_EQUAL EQUAL NOT_EQUAL AND OR NOT INTEGER FLOAT BOOL CHAR STRING PLUS MINUS TIMES DIVIDE LPAREN RPAREN LBRACKET RBRACKET LSQUARE_BRACKET RSQUARE_BRACKET SUBPROPERTY DOTCOMMA IDENTIFIER ATTRIBUTION TWO_POINTS PRINT_SIMULATOR_FUNCTION COMMENT TP_ARRAY THROW ERROR CHECKLISTprogram : command_sequenceterm : term measure_unitmeasure_unit : MEASUREMENT_UNIT DIVIDE MEASUREMENT_UNITmeasure_unit : MEASUREMENT_UNITexpression : termcommand_sequence : commandcommand_sequence : command command_sequencecommand : expressioncommand : control_operationscommand : attribution_statementcommand : IDENTIFIERcommand : arrayexpression : THROW ERROR LPAREN STRING RPARENexpression : load_statementexpression : expression TIMES term expression : expression DIVIDE termexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NOT termexpression : expression LESS_EQUAL expressionexpression : expression GREAT_EQUAL expressionexpression : expression NOT_EQUAL expressionexpression : expression EQUAL expressionobject_definition : object_definition DOTCOMMA object_definitionobject_definition : IDENTIFIER TWO_POINTS expression emptyattribution_statement : type IDENTIFIER emptyattribution_statement : type IDENTIFIER ATTRIBUTION expressionattribution_statement : IDENTIFIER ATTRIBUTION expressionattribution_statement : IDENTIFIER LBRACKET expression RBRACKET ATTRIBUTION expressionterm : term SUBPROPERTY LPAREN expression RPARENterm : term SUBPROPERTYterm : CHECKLIST LBRACKET STRING RBRACKETterm : INTEGERterm : MINUS INTEGERterm : FLOATterm : LPAREN expression RPARENterm : BOOLterm : IDENTIFIER LBRACKET expression RBRACKETterm : EXISTS_FUNCTION LPAREN IDENTIFIER RPARENterm : IDENTIFIERterm : STRINGterm : arrayterm : objectload_statement : LOAD STRING FROM STRING WHERE expressionif_statement : IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET else_statementif_statement : IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET emptyelse_statement : ELSE LBRACKET command_sequence RBRACKETelse_statement : ELSE if_statementcontrol_operations : if_statementcontrol_operations : while_statementwhile_statement : WHILE LPAREN expression RPAREN DO LBRACKET command_sequence RBRACKETobject : LBRACKET object_definition RBRACKETobject : PRINT_SIMULATOR_FUNCTION LPAREN term DOTCOMMA term DOTCOMMA term DOTCOMMA term RPARENarray : LSQUARE_BRACKET list_terms RSQUARE_BRACKETlist_terms : list_terms DOTCOMMA term\n                  | list_terms DOTCOMMA expressionlist_terms : term_arrayterm_array : expressiontype : TP_OBJECTtype : TP_INTEGERtype : TP_FLOATtype : TP_BOOLtype : TP_ARRAYtype : TP_STRINGempty :'
>>>>>>> origin/0.37.0
    
_lr_action_items = {'IDENTIFIER':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,22,23,24,27,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,93,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[7,7,-8,-9,-10,-11,-12,-5,56,-44,-14,56,-52,-53,60,62,56,-35,-37,-39,-46,-62,-63,-64,-65,-66,-67,56,56,56,56,56,56,56,56,56,56,56,56,-2,-33,-4,-43,-45,-36,-21,-68,98,56,56,56,56,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,56,-38,56,-28,56,-55,62,56,-57,56,-40,-3,-29,-34,-41,-42,56,56,-32,-13,-40,56,7,-31,-47,7,56,-68,-48,-49,-54,56,7,-51,-56,-50,]),'THROW':([0,3,4,5,6,7,8,9,11,12,13,16,17,20,22,23,24,27,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,121,122,123,124,126,127,130,131,133,135,138,139,141,143,144,147,148,],[10,10,-8,-9,-10,-11,-12,-5,10,-44,-14,-52,-53,10,-35,-37,-39,-46,10,10,10,10,10,10,10,10,10,10,-2,-33,-4,-43,-45,-36,-21,-68,10,10,10,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,10,-38,10,-28,10,-55,10,-57,10,-40,-3,-29,-34,-41,-42,10,-32,-13,-40,10,10,-31,-47,10,-68,-48,-49,-54,10,-51,-56,-50,]),'NOT':([0,3,4,5,6,7,8,9,11,12,13,16,17,20,22,23,24,27,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,121,122,123,124,126,127,130,131,133,135,138,139,141,143,144,147,148,],[15,15,-8,-9,-10,-11,-12,-5,15,-44,-14,-52,-53,15,-35,-37,-39,-46,15,15,15,15,15,15,15,15,15,15,-2,-33,-4,-43,-45,-36,-21,-68,15,15,15,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,15,-38,15,-28,15,-55,15,-57,15,-40,-3,-29,-34,-41,-42,15,-32,-13,-40,15,15,-31,-47,15,-68,-48,-49,-54,15,-51,-56,-50,]),'LSQUARE_BRACKET':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[20,20,-8,-9,-10,-11,-12,-5,20,-44,-14,20,-52,-53,20,-35,-37,-39,-46,20,20,20,20,20,20,20,20,20,20,20,20,-2,-33,-4,-43,-45,-36,-21,-68,20,20,20,20,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,20,-38,20,-28,20,-55,20,-57,20,-40,-3,-29,-34,-41,-42,20,20,-32,-13,-40,20,20,-31,-47,20,20,-68,-48,-49,-54,20,20,-51,-56,-50,]),'CHECKLIST':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[21,21,-8,-9,-10,-11,-12,-5,21,-44,-14,21,-52,-53,21,-35,-37,-39,-46,21,21,21,21,21,21,21,21,21,21,21,21,-2,-33,-4,-43,-45,-36,-21,-68,21,21,21,21,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,21,-38,21,-28,21,-55,21,-57,21,-40,-3,-29,-34,-41,-42,21,21,-32,-13,-40,21,21,-31,-47,21,21,-68,-48,-49,-54,21,21,-51,-56,-50,]),'INTEGER':([0,3,4,5,6,7,8,9,11,12,13,14,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[22,22,-8,-9,-10,-11,-12,-5,22,-44,-14,58,22,-52,-53,22,-35,-37,-39,-46,22,22,22,22,22,22,22,22,22,22,22,22,-2,-33,-4,-43,-45,-36,-21,-68,22,22,22,22,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,22,-38,22,-28,22,-55,22,-57,22,-40,-3,-29,-34,-41,-42,22,22,-32,-13,-40,22,22,-31,-47,22,22,-68,-48,-49,-54,22,22,-51,-56,-50,]),'MINUS':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,64,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,94,95,96,99,101,102,104,105,106,108,109,111,112,113,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[14,14,42,-9,-10,-11,-12,-5,14,-44,-14,14,-52,-53,14,-35,-37,-39,-46,14,14,14,14,14,14,14,14,14,14,14,14,-2,-33,-4,42,-43,-45,-36,-21,-68,42,14,14,14,14,-15,-16,42,42,42,42,42,42,42,42,42,42,14,-38,14,-28,14,-55,14,-57,14,42,42,42,-40,42,-3,42,42,42,-5,42,-34,-41,-42,14,14,-32,-13,-40,14,14,42,42,14,14,-68,-48,-49,-54,14,14,-51,-56,-50,]),'FLOAT':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[23,23,-8,-9,-10,-11,-12,-5,23,-44,-14,23,-52,-53,23,-35,-37,-39,-46,23,23,23,23,23,23,23,23,23,23,23,23,-2,-33,-4,-43,-45,-36,-21,-68,23,23,23,23,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,23,-38,23,-28,23,-55,23,-57,23,-40,-3,-29,-34,-41,-42,23,23,-32,-13,-40,23,23,-31,-47,23,23,-68,-48,-49,-54,23,23,-51,-56,-50,]),'LPAREN':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,25,26,27,29,30,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[11,11,-8,-9,-10,-11,-12,-5,11,-44,-14,11,-52,-53,11,-35,-37,-39,67,68,-46,70,71,72,11,11,11,11,11,11,11,11,11,11,11,11,-2,85,-4,87,-43,-45,-36,-21,-68,11,11,11,11,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,11,-38,11,-28,11,-55,11,-57,11,-40,-3,-29,-34,-41,-42,11,11,-32,-13,-40,11,11,-31,-47,11,11,-68,-48,-49,-54,11,11,-51,-56,-50,]),'BOOL':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[24,24,-8,-9,-10,-11,-12,-5,24,-44,-14,24,-52,-53,24,-35,-37,-39,-46,24,24,24,24,24,24,24,24,24,24,24,24,-2,-33,-4,-43,-45,-36,-21,-68,24,24,24,24,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,24,-38,24,-28,24,-55,24,-57,24,-40,-3,-29,-34,-41,-42,24,24,-32,-13,-40,24,24,-31,-47,24,24,-68,-48,-49,-54,24,24,-51,-56,-50,]),'EXISTS_FUNCTION':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[25,25,-8,-9,-10,-11,-12,-5,25,-44,-14,25,-52,-53,25,-35,-37,-39,-46,25,25,25,25,25,25,25,25,25,25,25,25,-2,-33,-4,-43,-45,-36,-21,-68,25,25,25,25,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,25,-38,25,-28,25,-55,25,-57,25,-40,-3,-29,-34,-41,-42,25,25,-32,-13,-40,25,25,-31,-47,25,25,-68,-48,-49,-54,25,25,-51,-56,-50,]),'ADIMENSIONAL':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[26,26,-8,-9,-10,-11,-12,-5,26,-44,-14,26,-52,-53,26,-35,-37,-39,-46,26,26,26,26,26,26,26,26,26,26,26,26,-2,-33,-4,-43,-45,-36,-21,-68,26,26,26,26,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,26,-38,26,-28,26,-55,26,-57,26,-40,-3,-29,-34,-41,-42,26,26,-32,-13,-40,26,26,-31,-47,26,26,-68,-48,-49,-54,26,26,-51,-56,-50,]),'STRING':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,28,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,89,90,91,92,94,95,96,100,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[12,12,-8,-9,-10,-11,-12,-5,12,-44,-14,12,-52,-53,12,-35,-37,-39,-46,69,12,12,12,12,12,12,12,12,12,12,12,12,-2,-33,-4,-43,-45,-36,-21,-68,97,12,12,12,12,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,12,107,-38,12,-28,12,-55,12,-57,12,117,-40,-3,-29,-34,-41,-42,12,12,-32,-13,-40,12,12,-31,-47,12,12,-68,-48,-49,-54,12,12,-51,-56,-50,]),'LOAD':([0,3,4,5,6,7,8,9,11,12,13,16,17,20,22,23,24,27,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,121,122,123,124,126,127,130,131,133,135,138,139,141,143,144,147,148,],[28,28,-8,-9,-10,-11,-12,-5,28,-44,-14,-52,-53,28,-35,-37,-39,-46,28,28,28,28,28,28,28,28,28,28,-2,-33,-4,-43,-45,-36,-21,-68,28,28,28,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,28,-38,28,-28,28,-55,28,-57,28,-40,-3,-29,-34,-41,-42,28,-32,-13,-40,28,28,-31,-47,28,-68,-48,-49,-54,28,-51,-56,-50,]),'IF':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,140,141,143,144,147,148,],[29,29,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,29,-31,-47,29,-68,-48,-49,29,-54,29,-51,-56,-50,]),'WHILE':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[30,30,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,30,-31,-47,30,-68,-48,-49,-54,30,-51,-56,-50,]),'TP_OBJECT':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[31,31,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,31,-31,-47,31,-68,-48,-49,-54,31,-51,-56,-50,]),'TP_INTEGER':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[32,32,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,32,-31,-47,32,-68,-48,-49,-54,32,-51,-56,-50,]),'TP_FLOAT':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[33,33,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,33,-31,-47,33,-68,-48,-49,-54,33,-51,-56,-50,]),'TP_BOOL':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[34,34,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,34,-31,-47,34,-68,-48,-49,-54,34,-51,-56,-50,]),'TP_ARRAY':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[35,35,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,35,-31,-47,35,-68,-48,-49,-54,35,-51,-56,-50,]),'TP_STRING':([0,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,127,130,131,133,135,138,139,141,143,144,147,148,],[36,36,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,36,-31,-47,36,-68,-48,-49,-54,36,-51,-56,-50,]),'LBRACKET':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,21,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,118,120,121,122,123,124,126,127,128,130,131,133,134,135,138,139,140,141,142,143,144,147,148,],[19,19,-8,-9,-10,50,-12,-5,19,-44,-14,19,-52,-53,19,66,-35,-37,-39,-46,19,19,19,19,19,19,19,19,19,19,19,19,-2,-33,-4,89,-45,-36,-21,-68,19,19,19,19,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,19,-38,19,-28,19,-55,19,-57,19,-40,-3,-29,-34,-41,-42,127,19,19,-32,-13,-40,19,19,133,-31,-47,19,19,-68,-48,-49,143,-54,19,19,-51,-56,-50,]),'PRINT_SIMULATOR_FUNCTION':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,20,22,23,24,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,94,95,96,104,106,109,114,115,116,120,121,122,123,124,126,127,130,131,133,134,135,138,139,141,142,143,144,147,148,],[37,37,-8,-9,-10,-11,-12,-5,37,-44,-14,37,-52,-53,37,-35,-37,-39,-46,37,37,37,37,37,37,37,37,37,37,37,37,-2,-33,-4,-43,-45,-36,-21,-68,37,37,37,37,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,37,-38,37,-28,37,-55,37,-57,37,-40,-3,-29,-34,-41,-42,37,37,-32,-13,-40,37,37,-31,-47,37,37,-68,-48,-49,-54,37,37,-51,-56,-50,]),'$end':([1,2,3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,38,51,52,53,56,57,58,59,60,73,74,75,76,77,78,79,80,81,82,83,88,90,92,95,104,106,109,114,115,116,122,123,124,130,131,135,138,139,141,144,147,148,],[0,-1,-6,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-7,-2,-33,-4,-43,-45,-36,-21,-68,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,-38,-28,-55,-57,-40,-3,-29,-34,-41,-42,-32,-13,-40,-31,-47,-68,-48,-49,-54,-51,-56,-50,]),'RBRACKET':([3,4,5,6,7,8,9,12,13,16,17,22,23,24,27,38,51,52,53,56,57,58,59,60,61,73,74,75,76,77,78,79,80,81,82,83,84,88,90,92,95,97,104,106,108,109,110,111,114,115,116,122,123,124,125,130,131,132,135,136,138,139,141,144,146,147,148,],[-6,-8,-9,-10,-11,-12,-5,-44,-14,-52,-53,-35,-37,-39,-46,-7,-2,-33,-4,-43,-45,-36,-21,-68,92,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-30,104,-38,-28,-55,-57,114,-40,-3,124,-29,-26,-68,-34,-41,-42,-32,-13,-40,-27,-31,-47,135,-68,141,-48,-49,-54,-51,148,-56,-50,]),'TIMES':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[39,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,39,-43,-45,-36,-21,39,-15,-16,39,39,39,39,39,39,39,39,39,39,-38,-55,-57,39,39,39,-40,39,-3,39,39,39,-5,39,-34,-41,-42,-32,-13,-40,39,39,-56,]),'DIVIDE':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[40,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,86,40,-43,-45,-36,-21,40,-15,-16,40,40,40,40,40,40,40,40,40,40,-38,-55,-57,40,40,40,-40,40,-3,40,40,40,-5,40,-34,-41,-42,-32,-13,-40,40,40,-56,]),'PLUS':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[41,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,41,-43,-45,-36,-21,41,-15,-16,41,41,41,41,41,41,41,41,41,41,-38,-55,-57,41,41,41,-40,41,-3,41,41,41,-5,41,-34,-41,-42,-32,-13,-40,41,41,-56,]),'AND':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[43,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,43,-43,-45,-36,-21,43,-15,-16,43,43,43,43,43,43,43,43,43,43,-38,-55,-57,43,43,43,-40,43,-3,43,43,43,-5,43,-34,-41,-42,-32,-13,-40,43,43,-56,]),'OR':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[44,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,44,-43,-45,-36,-21,44,-15,-16,44,44,44,44,44,44,44,44,44,44,-38,-55,-57,44,44,44,-40,44,-3,44,44,44,-5,44,-34,-41,-42,-32,-13,-40,44,44,-56,]),'LESS_EQUAL':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[45,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,45,-43,-45,-36,-21,45,-15,-16,45,45,45,45,45,45,45,45,45,45,-38,-55,-57,45,45,45,-40,45,-3,45,45,45,-5,45,-34,-41,-42,-32,-13,-40,45,45,-56,]),'GREAT_EQUAL':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[46,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,46,-43,-45,-36,-21,46,-15,-16,46,46,46,46,46,46,46,46,46,46,-38,-55,-57,46,46,46,-40,46,-3,46,46,46,-5,46,-34,-41,-42,-32,-13,-40,46,46,-56,]),'NOT_EQUAL':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[47,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,47,-43,-45,-36,-21,47,-15,-16,47,47,47,47,47,47,47,47,47,47,-38,-55,-57,47,47,47,-40,47,-3,47,47,47,-5,47,-34,-41,-42,-32,-13,-40,47,47,-56,]),'EQUAL':([4,7,8,9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,64,73,74,75,76,77,78,79,80,81,82,83,84,88,92,95,99,101,102,104,105,106,108,109,111,112,113,114,115,116,122,123,124,130,131,147,],[48,-43,-45,-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,48,-43,-45,-36,-21,48,-15,-16,48,48,48,48,48,48,48,48,48,48,-38,-55,-57,48,48,48,-40,48,-3,48,48,48,-5,48,-34,-41,-42,-32,-13,-40,48,48,-56,]),'ATTRIBUTION':([7,60,104,],[49,91,121,]),'SUBPROPERTY':([7,8,9,12,22,23,24,27,51,52,53,56,57,58,59,73,74,88,92,95,103,104,106,112,114,115,116,122,124,129,137,145,147,],[-43,-45,52,-44,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,52,52,52,-38,-55,-57,52,-40,-3,52,-34,-41,-42,-32,-40,52,52,52,-56,]),'MEASUREMENT_UNIT':([7,8,9,12,22,23,24,27,51,52,53,56,57,58,59,73,74,86,88,92,95,103,104,106,112,114,115,116,122,124,129,137,145,147,],[-43,-45,53,-44,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,53,53,53,106,-38,-55,-57,53,-40,-3,53,-34,-41,-42,-32,-40,53,53,53,-56,]),'RPAREN':([9,12,13,22,23,24,27,51,52,53,55,56,57,58,59,73,74,75,76,77,78,79,80,81,82,88,92,95,98,99,101,102,105,106,107,114,115,116,122,123,124,131,145,147,],[-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,88,-43,-45,-36,-21,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-38,-55,-57,115,116,118,119,122,-3,123,-34,-41,-42,-32,-13,-40,-47,147,-56,]),'RSQUARE_BRACKET':([9,12,13,22,23,24,27,51,52,53,56,57,58,59,63,64,65,73,74,75,76,77,78,79,80,81,82,88,92,95,106,112,113,114,115,116,122,123,124,131,147,],[-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,95,-61,-60,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-38,-55,-57,-3,-5,-59,-34,-41,-42,-32,-13,-40,-47,-56,]),'DOTCOMMA':([9,12,13,22,23,24,27,51,52,53,56,57,58,59,61,63,64,65,73,74,75,76,77,78,79,80,81,82,88,92,95,103,106,110,111,112,113,114,115,116,122,123,124,125,129,131,137,147,],[-5,-44,-14,-35,-37,-39,-46,-2,-33,-4,-43,-45,-36,-21,93,96,-61,-60,-15,-16,-17,-18,-19,-20,-22,-23,-24,-25,-38,-55,-57,120,-3,93,-68,-5,-59,-34,-41,-42,-32,-13,-40,-27,134,-47,142,-56,]),'ERROR':([10,],[54,]),'TWO_POINTS':([62,],[94,]),'FROM':([69,],[100,]),'WHERE':([117,],[126,]),'DO':([119,],[128,]),'ELSE':([135,],[140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'command_sequence':([0,3,127,133,143,],[2,38,132,136,146,]),'command':([0,3,127,133,143,],[3,3,3,3,3,]),'expression':([0,3,11,20,41,42,43,44,45,46,47,48,49,50,68,70,71,85,89,91,94,96,121,126,127,133,143,],[4,4,55,64,75,76,77,78,79,80,81,82,83,84,99,101,102,105,108,109,111,113,130,131,4,4,4,]),'control_operations':([0,3,127,133,143,],[5,5,5,5,5,]),'attribution_statement':([0,3,127,133,143,],[6,6,6,6,6,]),'array':([0,3,11,15,20,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,85,89,91,94,96,120,121,126,127,133,134,142,143,],[8,8,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,8,8,57,57,8,]),'term':([0,3,11,15,20,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,85,89,91,94,96,120,121,126,127,133,134,142,143,],[9,9,9,59,9,73,74,9,9,9,9,9,9,9,9,9,9,9,9,9,103,9,9,9,9,112,129,9,9,9,9,137,145,9,]),'load_statement':([0,3,11,20,41,42,43,44,45,46,47,48,49,50,68,70,71,85,89,91,94,96,121,126,127,133,143,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if_statement':([0,3,127,133,140,143,],[16,16,16,16,144,16,]),'while_statement':([0,3,127,133,143,],[17,17,17,17,17,]),'type':([0,3,127,133,143,],[18,18,18,18,18,]),'object':([0,3,11,15,20,39,40,41,42,43,44,45,46,47,48,49,50,68,70,71,72,85,89,91,94,96,120,121,126,127,133,134,142,143,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'measure_unit':([9,59,73,74,103,112,129,137,145,],[51,51,51,51,51,51,51,51,51,]),'object_definition':([19,93,],[61,110,]),'list_terms':([20,],[63,]),'term_array':([20,],[65,]),'empty':([60,111,135,],[90,125,139,]),'else_statement':([135,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> command_sequence','program',1,'p_program_sequence_command','hplparser.py',23),
  ('term -> term measure_unit','term',2,'p_expression_term_measurement_unit','hplparser.py',28),
  ('measure_unit -> MEASUREMENT_UNIT DIVIDE MEASUREMENT_UNIT','measure_unit',3,'p_measurement_unit_composed','hplparser.py',33),
  ('measure_unit -> MEASUREMENT_UNIT','measure_unit',1,'p_measurement_unit','hplparser.py',38),
  ('expression -> term','expression',1,'p_expression_term','hplparser.py',43),
  ('command_sequence -> command','command_sequence',1,'p_command_sequence_command','hplparser.py',48),
  ('command_sequence -> command command_sequence','command_sequence',2,'p_command_sequence_command2','hplparser.py',53),
  ('command -> expression','command',1,'p_command_expression','hplparser.py',59),
  ('command -> control_operations','command',1,'p_command_control_operations','hplparser.py',64),
  ('command -> attribution_statement','command',1,'p_command_attribution_statement','hplparser.py',69),
  ('command -> IDENTIFIER','command',1,'p_command_identifier','hplparser.py',74),
  ('command -> array','command',1,'p_command_array','hplparser.py',79),
  ('expression -> THROW ERROR LPAREN STRING RPAREN','expression',5,'p_expression_error','hplparser.py',84),
  ('expression -> load_statement','expression',1,'p_expression_load_statement','hplparser.py',89),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','hplparser.py',94),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','hplparser.py',99),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','hplparser.py',104),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','hplparser.py',109),
  ('expression -> expression AND expression','expression',3,'p_expression_and','hplparser.py',114),
  ('expression -> expression OR expression','expression',3,'p_expression_or','hplparser.py',119),
  ('expression -> NOT term','expression',2,'p_expression_not','hplparser.py',124),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_less_equal_operation','hplparser.py',129),
  ('expression -> expression GREAT_EQUAL expression','expression',3,'p_great_equal_operation','hplparser.py',134),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_not_equal_operation','hplparser.py',139),
  ('expression -> expression EQUAL expression','expression',3,'p_equal_operation','hplparser.py',144),
  ('object_definition -> object_definition DOTCOMMA object_definition','object_definition',3,'p_object_definition_type_2','hplparser.py',154),
  ('object_definition -> IDENTIFIER TWO_POINTS expression empty','object_definition',4,'p_object_definition_type_1','hplparser.py',160),
  ('attribution_statement -> type IDENTIFIER empty','attribution_statement',3,'p_attribution_statement_type_id_default','hplparser.py',171),
  ('attribution_statement -> type IDENTIFIER ATTRIBUTION expression','attribution_statement',4,'p_attribution_statement_type_id','hplparser.py',176),
  ('attribution_statement -> IDENTIFIER ATTRIBUTION expression','attribution_statement',3,'p_attribution_statement_id','hplparser.py',181),
  ('attribution_statement -> IDENTIFIER LBRACKET expression RBRACKET ATTRIBUTION expression','attribution_statement',6,'p_expression_term_attribuition_array','hplparser.py',186),
  ('term -> term SUBPROPERTY LPAREN expression RPAREN','term',5,'p_subproperty','hplparser.py',194),
  ('term -> term SUBPROPERTY','term',2,'p_subproperty_2','hplparser.py',199),
  ('term -> CHECKLIST LBRACKET STRING RBRACKET','term',4,'p_expression_term_checklist','hplparser.py',210),
  ('term -> INTEGER','term',1,'p_expression_term_integer','hplparser.py',215),
  ('term -> MINUS INTEGER','term',2,'p_expression_term_negative_integer','hplparser.py',220),
  ('term -> FLOAT','term',1,'p_expression_term_float','hplparser.py',225),
  ('term -> LPAREN expression RPAREN','term',3,'p_expression_paren','hplparser.py',230),
  ('term -> BOOL','term',1,'p_expression_bool_term','hplparser.py',235),
  ('term -> IDENTIFIER LBRACKET expression RBRACKET','term',4,'p_expression_term_access_array','hplparser.py',240),
  ('term -> EXISTS_FUNCTION LPAREN IDENTIFIER RPAREN','term',4,'p_exists_function','hplparser.py',245),
  ('term -> ADIMENSIONAL LPAREN expression RPAREN','term',4,'p_adimensional_function','hplparser.py',250),
  ('term -> IDENTIFIER','term',1,'p_expression_term_identifier','hplparser.py',255),
  ('term -> STRING','term',1,'p_expression_term_string','hplparser.py',260),
  ('term -> array','term',1,'p_term_array','hplparser.py',265),
  ('term -> object','term',1,'p_term_object','hplparser.py',270),
  ('load_statement -> LOAD STRING FROM STRING WHERE expression','load_statement',6,'p_load_statement','hplparser.py',275),
  ('if_statement -> IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET else_statement','if_statement',8,'p_if_statement','hplparser.py',283),
  ('if_statement -> IF LPAREN expression RPAREN LBRACKET command_sequence RBRACKET empty','if_statement',8,'p_if_statement_empty','hplparser.py',288),
  ('else_statement -> ELSE LBRACKET command_sequence RBRACKET','else_statement',4,'p_else_statement','hplparser.py',293),
  ('else_statement -> ELSE if_statement','else_statement',2,'p_else_if_statement','hplparser.py',298),
  ('control_operations -> if_statement','control_operations',1,'p_control_operations_if_statement','hplparser.py',303),
  ('control_operations -> while_statement','control_operations',1,'p_control_operations_while','hplparser.py',308),
  ('while_statement -> WHILE LPAREN expression RPAREN DO LBRACKET command_sequence RBRACKET','while_statement',8,'p_while_statement','hplparser.py',313),
  ('object -> LBRACKET object_definition RBRACKET','object',3,'p_object','hplparser.py',318),
  ('object -> PRINT_SIMULATOR_FUNCTION LPAREN term DOTCOMMA term DOTCOMMA term DOTCOMMA term RPAREN','object',10,'p_print_simulator_function','hplparser.py',323),
  ('array -> LSQUARE_BRACKET list_terms RSQUARE_BRACKET','array',3,'p_array','hplparser.py',328),
  ('list_terms -> list_terms DOTCOMMA term','list_terms',3,'p_list_terms','hplparser.py',333),
  ('list_terms -> list_terms DOTCOMMA expression','list_terms',3,'p_list_terms','hplparser.py',334),
  ('list_terms -> term_array','list_terms',1,'p_list_terms_term','hplparser.py',340),
  ('term_array -> expression','term_array',1,'p_term_string','hplparser.py',345),
  ('type -> TP_OBJECT','type',1,'p_type_object','hplparser.py',350),
  ('type -> TP_INTEGER','type',1,'p_type_integer','hplparser.py',355),
  ('type -> TP_FLOAT','type',1,'p_type_float','hplparser.py',360),
  ('type -> TP_BOOL','type',1,'p_type_bool','hplparser.py',365),
  ('type -> TP_ARRAY','type',1,'p_type_array','hplparser.py',370),
  ('type -> TP_STRING','type',1,'p_type_string','hplparser.py',375),
  ('empty -> <empty>','empty',0,'p_empty','hplparser.py',380),
]
